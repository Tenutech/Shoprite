name: Build on PR Development

on:
  pull_request:
    branches:
      - development

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 8.2.4

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Determine if linting is required
        id: linting-required
        uses: tj-actions/changed-files@v29.0.3
        with:
          files: |
            app/**/*.php
            config/**/*.php

      - name: PHP Lint Check
        if: >-
          steps.linting-required.outputs.only_changed == 'true'
          || steps.linting-required.outputs.only_modified == 'true'
        run: composer run lint

      - name: PSR2 Code Sniffer
        if: >-
          steps.linting-required.outputs.only_changed == 'true'
          || steps.linting-required.outputs.only_modified == 'true'
        run: composer run style

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 8.2.4
          extensions: pdo_sqlite, sqlite3, xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run Preamble
        run: |
          mkdir -p database
          touch database/database.sqlite
          cp .env.testing .env
          # php artisan migrate --database=sqlite
          mkdir -p build/coverage
          # Install npm dependencies and build assets
          # npm install
          # npm run build

      - name: Run tests
        run: composer run tests

      - name: Generate coverage report
        run: composer run coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: build/coverage